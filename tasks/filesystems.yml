---
# tasks file for hardening
- name: Ensure /etc/modprobe.d directory exists
  ansible.builtin.file:
    path: /etc/modprobe.d
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Disable and unload uncommon filesystems on non-containerized systems
  become: true
  when: ansible_virtualization_type not in ['docker', 'lxc', 'podman', 'container']
  block:
    - name: Ensure mounting of uncommon filesystems is disabled
      ansible.builtin.copy:
        dest: "/etc/modprobe.d/{{ item }}.conf"
        content: "install {{ item }} /bin/true"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ hardening_disabled_filesystems }}"

    - name: Unload uncommon filesystem modules if currently loaded
      community.general.modprobe:
        name: "{{ item }}"
        state: absent
      loop: "{{ hardening_disabled_filesystems }}"

- name: Restrict core dumps and enable ASLR
  become: true
  when: ansible_virtualization_type not in ['docker', 'lxc', 'podman', 'container']
  block:
    - name: Configure core dump limits
      ansible.builtin.copy:
        dest: /etc/security/limits.d/coredumps.conf
        content: "* hard core 0"
        mode: "0600"
      when:
        - cis_core_dumps_restricted | bool

    - name: Set fs.suid_dumpable sysctl
      ansible.posix.sysctl:
        name: fs.suid_dumpable
        value: "0"
      when:
        - cis_core_dumps_restricted | bool

    - name: Configure systemd coredump options
      community.general.ini_file:
        path: /etc/systemd/coredump.conf
        mode: "0644"
        section: Coredump
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        no_extra_spaces: true
      loop:
        - option: Storage
          value: none
        - option: ProcessSizeMax
          value: "0"
      when:
        - cis_core_dumps_restricted | bool
      notify:
        - systemctl daemon-reload

    - name: Set ASLR sysctl
      ansible.posix.sysctl:
        name: kernel.randomize_va_space
        value: "2"
      when:
        - cis_aslr_enabled | bool
